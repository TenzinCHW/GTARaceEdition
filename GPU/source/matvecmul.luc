// This module will perform matrix-vector multiplication (mat x vec)
// REQUIREMENT: 1 cycle

module matvecmul #(
    NBITS = 16 : NBITS > 1, // number of bits for each element
    HT = 4 : HT > 0, // height of mat
    SZ = 4 : SZ > 0, // width of matrix = length of vec
    QUOTIENT = 8 : QUOTIENT >= 0 // number of bits to represent decimals
  )(
    input mat[HT][SZ][NBITS],
    input vec[SZ][NBITS],
    output out[HT][NBITS]
  ) {

  //dotprod dp[HT] (#NBITS(NBITS), #SZ(SZ), #QUOTIENT(QUOTIENT));
  sig mul[HT][NBITS * 2];
  var i, j;

  always {
    //dp.vec1 = mat;
    //dp.vec2 = HTx{{vec}};

    mul = HTx{{(NBITS * 2)x{0}}};
    for (i = 0; i < HT; i++) {
      for (j = 0; j < SZ; j++) {
        mul[i] = mul[i] + mat[i][j] * vec[i];
      }
    }

    for (i = 0; i < HT; i++) {
      out[i] = mul[i][NBITS + QUOTIENT - 1:QUOTIENT];
    }
  }
}
